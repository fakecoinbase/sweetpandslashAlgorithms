class Solution(object):
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
      
        
        def dfs(node, visited, removed):
            visited.add(node)
            for idx, val in enumerate(graph[node]):
                if val == 1 and idx not in visited and idx != removed:
                    dfs(idx, visited, removed)
                                 
        min_infected = float("+inf")
        best_node = -1
        
        for node_removed in sorted(initial):
            visited = set()
            remaining = [n for n in initial if n != node_removed]
            for v in remaining:
                if v not in visited:
                    dfs(v, visited, node_removed)
            if len(visited) < min_infected:
                min_infected = len(visited)
                best_node =  node_removed
        return best_node
